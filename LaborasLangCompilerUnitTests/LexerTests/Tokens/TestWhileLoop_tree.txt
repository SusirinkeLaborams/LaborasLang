Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: RootNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: StatementNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: WhileLoop, Children: [Content: Type: While, Start: 0, 0, End: 0, 0, Content: "while", Type: While, Children: [], Content: Type: LeftBracket, Start: 1, 7, End: 1, 7, Content: "(", Type: LeftBracket, Children: [], Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: Value, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: ArithmeticNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: ArithmeticSubnode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: RValue, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FullSymbol, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "condition", Type: Symbol, Children: []]]]]], Content: Type: RightBracket, Start: 1, 17, End: 1, 17, Content: ")", Type: RightBracket, Children: [], Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: StatementNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FunctionCall, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FullSymbol, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "function", Type: Symbol, Children: []], Content: Type: LeftBracket, Start: 1, 27, End: 1, 27, Content: "(", Type: LeftBracket, Children: [], Content: Type: RightBracket, Start: 1, 28, End: 1, 28, Content: ")", Type: RightBracket, Children: []], Content: Type: EndOfLine, Start: 1, 29, End: 1, 29, Content: ";", Type: EndOfLine, Children: []]]], Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: StatementNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: WhileLoop, Children: [Content: Type: While, Start: 0, 0, End: 0, 0, Content: "while", Type: While, Children: [], Content: Type: LeftBracket, Start: 2, 19, End: 2, 19, Content: "(", Type: LeftBracket, Children: [], Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: Value, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: ArithmeticNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: ArithmeticSubnode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: RValue, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FunctionCall, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FullSymbol, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "condition", Type: Symbol, Children: []], Content: Type: LeftBracket, Start: 2, 29, End: 2, 29, Content: "(", Type: LeftBracket, Children: [], Content: Type: RightBracket, Start: 2, 30, End: 2, 30, Content: ")", Type: RightBracket, Children: []]]]]], Content: Type: RightBracket, Start: 2, 31, End: 2, 31, Content: ")", Type: RightBracket, Children: [], Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: StatementNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: CodeBlockNode, Children: [Content: Type: LeftCurlyBracket, Start: 2, 33, End: 2, 33, Content: "{", Type: LeftCurlyBracket, Children: [], Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: StatementNode, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FunctionCall, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "", Type: FullSymbol, Children: [Content: Type: Symbol, Start: 0, 0, End: 0, 0, Content: "function", Type: Symbol, Children: []], Content: Type: LeftBracket, Start: 2, 42, End: 2, 42, Content: "(", Type: LeftBracket, Children: [], Content: Type: RightBracket, Start: 2, 43, End: 2, 43, Content: ")", Type: RightBracket, Children: []], Content: Type: EndOfLine, Start: 2, 44, End: 2, 44, Content: ";", Type: EndOfLine, Children: []], Content: Type: RightCurlyBracket, Start: 2, 45, End: 2, 45, Content: "}", Type: RightCurlyBracket, Children: []]]]]]