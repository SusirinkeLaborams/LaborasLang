<AstNode xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Lexer"><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>if</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>If</m_Type></m_Content><m_Type>If</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>(</m_Content><m_End><m_Column>16</m_Column><m_Row>2</m_Row></m_End><m_Start><m_Column>16</m_Column><m_Row>2</m_Row></m_Start><m_Type>LeftBracket</m_Type></m_Content><m_Type>LeftBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>somehting</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>Symbol</m_Type></m_Content><m_Type>Symbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FullSymbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>RValue</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>ArithmeticSubnode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>ArithmeticNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>Value</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>)</m_Content><m_End><m_Column>26</m_Column><m_Row>2</m_Row></m_End><m_Start><m_Column>26</m_Column><m_Row>2</m_Row></m_Start><m_Type>RightBracket</m_Type></m_Content><m_Type>RightBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>{</m_Content><m_End><m_Column>14</m_Column><m_Row>3</m_Row></m_End><m_Start><m_Column>14</m_Column><m_Row>3</m_Row></m_Start><m_Type>LeftCurlyBracket</m_Type></m_Content><m_Type>LeftCurlyBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>stuff</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>Symbol</m_Type></m_Content><m_Type>Symbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FullSymbol</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>(</m_Content><m_End><m_Column>23</m_Column><m_Row>4</m_Row></m_End><m_Start><m_Column>23</m_Column><m_Row>4</m_Row></m_Start><m_Type>LeftBracket</m_Type></m_Content><m_Type>LeftBracket</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>)</m_Content><m_End><m_Column>24</m_Column><m_Row>4</m_Row></m_End><m_Start><m_Column>24</m_Column><m_Row>4</m_Row></m_Start><m_Type>RightBracket</m_Type></m_Content><m_Type>RightBracket</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FunctionCall</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>;</m_Content><m_End><m_Column>25</m_Column><m_Row>4</m_Row></m_End><m_Start><m_Column>25</m_Column><m_Row>4</m_Row></m_Start><m_Type>EndOfLine</m_Type></m_Content><m_Type>EndOfLine</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>}</m_Content><m_End><m_Column>14</m_Column><m_Row>5</m_Row></m_End><m_Start><m_Column>14</m_Column><m_Row>5</m_Row></m_Start><m_Type>RightCurlyBracket</m_Type></m_Content><m_Type>RightCurlyBracket</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>CodeBlockNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>else</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>Else</m_Type></m_Content><m_Type>Else</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>{</m_Content><m_End><m_Column>14</m_Column><m_Row>7</m_Row></m_End><m_Start><m_Column>14</m_Column><m_Row>7</m_Row></m_Start><m_Type>LeftCurlyBracket</m_Type></m_Content><m_Type>LeftCurlyBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>stuff2</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>Symbol</m_Type></m_Content><m_Type>Symbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FullSymbol</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>(</m_Content><m_End><m_Column>20</m_Column><m_Row>8</m_Row></m_End><m_Start><m_Column>20</m_Column><m_Row>8</m_Row></m_Start><m_Type>LeftBracket</m_Type></m_Content><m_Type>LeftBracket</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>)</m_Content><m_End><m_Column>21</m_Column><m_Row>8</m_Row></m_End><m_Start><m_Column>21</m_Column><m_Row>8</m_Row></m_Start><m_Type>RightBracket</m_Type></m_Content><m_Type>RightBracket</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FunctionCall</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>;</m_Content><m_End><m_Column>22</m_Column><m_Row>8</m_Row></m_End><m_Start><m_Column>22</m_Column><m_Row>8</m_Row></m_Start><m_Type>EndOfLine</m_Type></m_Content><m_Type>EndOfLine</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>}</m_Content><m_End><m_Column>14</m_Column><m_Row>9</m_Row></m_End><m_Start><m_Column>14</m_Column><m_Row>9</m_Row></m_Start><m_Type>RightCurlyBracket</m_Type></m_Content><m_Type>RightCurlyBracket</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>CodeBlockNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>ConditionalSentence</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>if</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>If</m_Type></m_Content><m_Type>If</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>(</m_Content><m_End><m_Column>16</m_Column><m_Row>11</m_Row></m_End><m_Start><m_Column>16</m_Column><m_Row>11</m_Row></m_Start><m_Type>LeftBracket</m_Type></m_Content><m_Type>LeftBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>something</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>Symbol</m_Type></m_Content><m_Type>Symbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FullSymbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>RValue</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>ArithmeticSubnode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>ArithmeticNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>Value</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>)</m_Content><m_End><m_Column>26</m_Column><m_Row>11</m_Row></m_End><m_Start><m_Column>26</m_Column><m_Row>11</m_Row></m_Start><m_Type>RightBracket</m_Type></m_Content><m_Type>RightBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>{</m_Content><m_End><m_Column>14</m_Column><m_Row>12</m_Row></m_End><m_Start><m_Column>14</m_Column><m_Row>12</m_Row></m_Start><m_Type>LeftCurlyBracket</m_Type></m_Content><m_Type>LeftCurlyBracket</m_Type></AstNode><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children><AstNode><m_Children i:nil="true" /><m_Content><m_Content>stuff</m_Content><m_End><m_Column>0</m_Column><m_Row>0</m_Row></m_End><m_Start><m_Column>0</m_Column><m_Row>0</m_Row></m_Start><m_Type>Symbol</m_Type></m_Content><m_Type>Symbol</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FullSymbol</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>(</m_Content><m_End><m_Column>23</m_Column><m_Row>13</m_Row></m_End><m_Start><m_Column>23</m_Column><m_Row>13</m_Row></m_Start><m_Type>LeftBracket</m_Type></m_Content><m_Type>LeftBracket</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>)</m_Content><m_End><m_Column>24</m_Column><m_Row>13</m_Row></m_End><m_Start><m_Column>24</m_Column><m_Row>13</m_Row></m_Start><m_Type>RightBracket</m_Type></m_Content><m_Type>RightBracket</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>FunctionCall</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>;</m_Content><m_End><m_Column>25</m_Column><m_Row>13</m_Row></m_End><m_Start><m_Column>25</m_Column><m_Row>13</m_Row></m_Start><m_Type>EndOfLine</m_Type></m_Content><m_Type>EndOfLine</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode><AstNode><m_Children i:nil="true" /><m_Content><m_Content>}</m_Content><m_End><m_Column>14</m_Column><m_Row>14</m_Row></m_End><m_Start><m_Column>14</m_Column><m_Row>14</m_Row></m_Start><m_Type>RightCurlyBracket</m_Type></m_Content><m_Type>RightCurlyBracket</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>CodeBlockNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>ConditionalSentence</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>StatementNode</m_Type></AstNode></m_Children><m_Content i:nil="true" /><m_Type>RootNode</m_Type></AstNode>