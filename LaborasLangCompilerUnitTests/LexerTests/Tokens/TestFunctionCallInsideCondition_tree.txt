Content: Type: RootNode, Start: 1, 1, End: 1, 18, Content: ""
Type: RootNode
Children:
	Content: Type: ConditionalSentence, Start: 1, 1, End: 1, 18, Content: ""
	Type: ConditionalSentence
	Children:
		Content: Type: If, Start: 1, 1, End: 1, 3, Content: "if"
		Type: If
		Children:

		Content: Type: LeftParenthesis, Start: 1, 4, End: 1, 5, Content: "("
		Type: LeftParenthesis
		Children:

		Content: Type: Value, Start: 1, 5, End: 1, 14, Content: ""
		Type: Value
		Children:
			Content: Type: PostfixNode, Start: 1, 5, End: 1, 14, Content: ""
			Type: PostfixNode
			Children:
				Content: Type: FullSymbol, Start: 1, 5, End: 1, 11, Content: ""
				Type: FullSymbol
				Children:
					Content: Type: Symbol, Start: 1, 5, End: 1, 11, Content: "IsEven"
					Type: Symbol
					Children:

				Content: Type: FunctionArgumentsList, Start: 1, 11, End: 1, 14, Content: ""
				Type: FunctionArgumentsList
				Children:
					Content: Type: LeftParenthesis, Start: 1, 11, End: 1, 12, Content: "("
					Type: LeftParenthesis
					Children:

					Content: Type: Value, Start: 1, 12, End: 1, 13, Content: ""
					Type: Value
					Children:
						Content: Type: FullSymbol, Start: 1, 12, End: 1, 13, Content: ""
						Type: FullSymbol
						Children:
							Content: Type: Symbol, Start: 1, 12, End: 1, 13, Content: "i"
							Type: Symbol
							Children:

					Content: Type: RightParenthesis, Start: 1, 13, End: 1, 14, Content: ")"
					Type: RightParenthesis
					Children:

		Content: Type: RightParenthesis, Start: 1, 14, End: 1, 15, Content: ")"
		Type: RightParenthesis
		Children:

		Content: Type: CodeBlockNode, Start: 1, 16, End: 1, 18, Content: ""
		Type: CodeBlockNode
		Children:
			Content: Type: LeftCurlyBrace, Start: 1, 16, End: 1, 17, Content: "{"
			Type: LeftCurlyBrace
			Children:

			Content: Type: RightCurlyBrace, Start: 1, 17, End: 1, 18, Content: "}"
			Type: RightCurlyBrace
			Children:
